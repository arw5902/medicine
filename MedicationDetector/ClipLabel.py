# Label each clip according to ground truth csv file
# Input: filePath1 - ground truth "vsamples.csv" by default, which specifies the frame number contains the medicine taking moment
#        filePath2 - file name of the output "csamples.csv" by default
#        FrameInterval - the frame intervals between frames next to each other 
#        clipSize - NO. of frames in each clip
# Output: csamples.csv - a csv file labeling each clip generated by VideoClips.py: 0 - no taking; 1- taking 

import os
import argparse
import cv2
import csv
import math

args = argparse.ArgumentParser()
args.add_argument("--filePath1", default='vsamples.csv')
args.add_argument("--filePath2", default='csamples.csv')
args.add_argument("--FrameInterval", default=10)
args.add_argument("--clipSize", default=75)
args = args.parse_args()
csv_dir = './MedicationDetector/csv'

# clip_dir is on the machine that contains the original video clips
# TSF_dir is the clip dir on the machine that runs TimeSformer, which could be
# different from the machine that collects the video.
if args.clipSize == 75:
    clip_frame_num = 75
    clip_dir = './MedicationDetector/clip_a_75/'
    TSF_dir = './MedicationDetector/clip_a_75/'
elif args.clipSize == 100:
    clip_frame_num = 100
    clip_dir = './MedicationDetector/clip_a_100'
    TSF_dir = './MedicationDetector/clip_a_100/'
elif args.clipSize == 125:  
    clip_frame_num = 125   
    clip_dir = './MedicationDetector/clip_a_125'
    TSF_dir = './MedicationDetector/clip_a_125/'

afterwardAdjust = 0

filePath1 = os.path.join(csv_dir, args.filePath1)
filePath2 = os.path.join(csv_dir, args.filePath2)

videoSampleF = open(filePath1, "r")
videoSample = csv.reader(videoSampleF)
clipSampleF = open(filePath2, "x", encoding='utf-8')
clipSampleF.write("FilePath,Label\n") # Add the Header line, this line will be ignored when separating train, test, val dataset

for col in videoSample:
    fname = col[0]
    frameNumber = col[1]
    if fname and frameNumber:
        print(fname, " ", frameNumber)
        count = 1
        while True:
            fileName = os.path.join(clip_dir, fname + "clip" + str(count) + ".mp4")
            if os.path.exists(fileName):
                if count >= int(frameNumber) - int(clip_frame_num) and count <= int(frameNumber) - afterwardAdjust:
                    clipSampleF.write(TSF_dir + fname + "clip" + str(count) + ".mp4,1\n")
                else:
                    clipSampleF.write(TSF_dir + fname + "clip" + str(count) + ".mp4,0\n")
            else:
                break
            count += args.FrameInterval

videoSampleF.close()
clipSampleF.close()

